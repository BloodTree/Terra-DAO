import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x28E70aC5C28F937Cb4967677A3529742d982d669", // DAO
    MEMO_ADDRESS: "0x2C6b0A4FffF898a63aA493d6B78ceD70AC75d1b8", // MEMOries
    TIME_ADDRESS: "0x0BF4fC0A2E7114b40a01344f4F799e44A4B7706e", // TimeERC20Token
    MIM_ADDRESS: "0x4F3709F8c80d283708e32690a8BAa4ab7c94BA03", // AnyswapV5ERC20
    STAKING_ADDRESS: "0x7CD959A6D8329c4b8f6c7E2ee0D0F888e9Cc1753", // TimeStaking
    STAKING_HELPER_ADDRESS: "0x0C8208134B96540e7D6ae98DCa8Bc3290CE3c48A", // StakingHelper
    TIME_BONDING_CALC_ADDRESS: "0xE2aD61C1C970193104F40a666FdfBfe41096827D", // TimeBondingCalculator
    TREASURY_ADDRESS: "0x237820c3f744B8135D29c729609F683E19505634", // TimeTreasury
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae",
    WMEMO_ADDRESS: "0x859828B46F368526695d0b57D400F1f6b111027b", // wMEMO
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
